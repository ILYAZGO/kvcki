stages:
  - test
  - report

tests:
  stage: test
  resource_group: e2e-stand-requests
  image: mcr.microsoft.com/playwright/python:v1.45.0-jammy
  artifacts:
    when: always
    expire_in: 1 days
    paths:
      - exec.log
      - allure-report
  before_script:
    - apt update && apt install -y openjdk-17-jdk openjdk-17-jre
    - apt-get install wget
    - wget https://github.com/allure-framework/allure2/releases/download/${ALLURE_VERSION}/allure-${ALLURE_VERSION}.tgz && tar -zxvf allure-${ALLURE_VERSION}.tgz -C /opt/ && ln -s /opt/allure-${ALLURE_VERSION}/bin/allure /usr/bin/allure
  script:
    - echo Using public URL $PUBLIC_URL
    - pip install -r requirements.txt --default-timeout=100 
    - pytest -m independent -n 24 --reruns=${RERUNS_NUMBER} --alluredir=allure-results
  after_script:
    - if [ $CI_JOB_STATUS == 'failed' ]; then curl -s -X POST -d "chat_id=${TELEGRAM_CHAT_ID}&text=' !!! E2E tests failed !!! '&parse_mode=Markdown" "https://api.telegram.org/bot${TELEGRAM_API_TOKEN}/sendMessage"; fi
    - allure generate -c allure-results -o allure-report

pages:
    stage: report
    tags:
      - stand
    when:
      always
    needs:
        - tests
    script:
        - pwd
        - ls
        - mv exec.log /home/frontend/public/e2e_log/
        - mkdir public
        - cp -r allure-report/* public
#        - chmod og= $STAND_KEY
#        - apk add --update openssh-client bash
#        - ssh -i $STAND_KEY -o StrictHostKeyChecking=no $STAND_USER@$STAND_HOSTNAME "rm -rf /home/${STAND_USER}/public/e2e_report/"
#        - scp -r -i $STAND_KEY -o StrictHostKeyChecking=no $STAND_USER@$STAND_HOSTNAME allure-report  /home/${STAND_USER}/public/e2e_report
        - rm -rf /home/frontend/public/e2e_report/*
        - mv allure-report/* /home/frontend/public/e2e_report/

    artifacts:
        when: always
        expire_in: 7 days
        paths:
            - public
